/*
 * KubeSphere Advanced
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0.0
 * Contact: kubesphere@yunify.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.kubesphere.client.models;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Objects;

/** Initializer is information about an initializer that has not yet completed. */
@ApiModel(
    description = "Initializer is information about an initializer that has not yet completed.")
public class V1Initializer {
  @SerializedName("name")
  private String name = null;

  public V1Initializer name(String name) {
    this.name = name;
    return this;
  }

  /**
   * name of the process that is responsible for initializing this object.
   *
   * @return name
   */
  @ApiModelProperty(
      required = true,
      value = "name of the process that is responsible for initializing this object.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1Initializer v1Initializer = (V1Initializer) o;
    return Objects.equals(this.name, v1Initializer.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1Initializer {\n");

    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
